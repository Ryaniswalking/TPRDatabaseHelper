package org.walker.tprDBHelper.views;

import org.apache.commons.lang3.StringUtils;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.HashMap;

public class ListTestCasesView extends JFrame {

    private JPanel panel;
    private ArrayList<JButton> testCaseButtonList = new ArrayList<>();
    private JButton btn_SaveToCouch;
    private JPanel btnPanel;
    private JPanel panelMain;
    private JPanel panel_TestCases;
    private JPanel panel_Button;
    private JPanel panel_Main;
    private JPanel panel_Buttons;
    private JButton btn_Back;
    private JScrollPane scroll_TestCases;

    public ListTestCasesView() {

        $$$setupUI$$$();
        this.setSize(600, 600);
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation(dim.width / 2 - this.getSize().width / 2, dim.height / 2 - this.getSize().height / 2);
        this.setDefaultCloseOperation(EXIT_ON_CLOSE);

        this.add(panel_Main);
    }

    public void displayAllTestCases(ArrayList<String> keyNameArray, HashMap<String, Boolean> updatedTestCaseMap) {
        if (keyNameArray == null) {
            return;
        }

        for (int i = 0; i < keyNameArray.size(); i++) {
            String keyName = keyNameArray.get(i);
            JButton testCaseBTN = new JButton(StringUtils.abbreviate(keyName, 70));
            testCaseBTN.setActionCommand(keyName);
            if (updatedTestCaseMap.get(keyNameArray.get(i))) {
                testCaseBTN.setBackground(new Color(247, 153, 153));
            }
            testCaseButtonList.add(testCaseBTN);
            panel_TestCases.add(testCaseBTN);
        }

        this.add(panel_Main);
    }

    public void addSelectedKeyNameListener(ActionListener listenForBeingSelected) {
        for (JButton button : testCaseButtonList) {
            button.addActionListener(listenForBeingSelected);
        }
    }

    public void addSaveToCouchButtonListener(ActionListener listenForSaveButtonClick) {
        btn_SaveToCouch.addActionListener((listenForSaveButtonClick));
    }

    public Integer getScrollLocation() {
        return scroll_TestCases.getVerticalScrollBar().getValue();
    }

    public void setScrollBarLocation(int location) {
        scroll_TestCases.getVerticalScrollBar().setValue(location);
    }

    public void addBackButtonListener(ActionListener listener) {
        btn_Back.addActionListener(listener);
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        createUIComponents();
        panel_Main = new JPanel();
        panel_Main.setLayout(new BorderLayout(0, 25));
        panel_Buttons = new JPanel();
        panel_Buttons.setLayout(new FlowLayout(FlowLayout.CENTER, 60, 5));
        panel_Main.add(panel_Buttons, BorderLayout.SOUTH);
        btn_Back = new JButton();
        btn_Back.setPreferredSize(new Dimension(100, 30));
        btn_Back.setText("Back");
        panel_Buttons.add(btn_Back);
        btn_SaveToCouch = new JButton();
        btn_SaveToCouch.setPreferredSize(new Dimension(100, 30));
        btn_SaveToCouch.setText("Save To Couch");
        panel_Buttons.add(btn_SaveToCouch);
        scroll_TestCases = new JScrollPane();
        panel_Main.add(scroll_TestCases, BorderLayout.CENTER);
        scroll_TestCases.setViewportView(panel_TestCases);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return panel_Main;
    }

    private void createUIComponents() {
        panel_TestCases = new JPanel(new GridLayout(0, 1));
    }
}
